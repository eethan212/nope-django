"""
Django settings for nope project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import sys
from datetime import timedelta
from pathlib import Path

import environ
from celery.schedules import crontab

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
sys.path.append(f'{BASE_DIR}/lib')

env = environ.Env(DEBUG=(bool, False))
environ.Env.read_env(f'{BASE_DIR}/.env')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', default='e3f@4gra35=dh(^2_m)+@4gdt72b)s)5uv^!-ox)w4yx72@&%p')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG', default=False)

ALLOWED_HOSTS = ['*']

# Application definition
# from django_currentuser.middleware import ThreadLocalUserMiddleware

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',
    'django_filters',
    'drf_yasg',

    # modules
    'nope.accounts',
    'nope.demo',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_currentuser.middleware.ThreadLocalUserMiddleware',

]

ROOT_URLCONF = 'nope.urls'

AUTH_USER_MODEL = 'accounts.User'

# LOCAL_USER_ATTR_NAME = 'accounts.User'

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['rest_framework.filters.OrderingFilter',
                                'django_filters.rest_framework.DjangoFilterBackend'],
    'EXCEPTION_HANDLER': 'nope.core.exception_handler.handler',
    'DEFAULT_PAGINATION_CLASS': 'nope.core.pagination.CustomPageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_PERMISSION_CLASSES': [
        'nope.core.permissions.AuthOrOptions'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'nope.core.auth.LaravelAuth',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION = 'nope.wsgi.application'
ASGI_APPLICATION = 'nope.asgi.application'

CHANNEL_LAYERS = {
    # "default": {
    #     "BACKEND": "channels.layers.InMemoryChannelLayer"
    # }

    # channels_redis
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": ['redis://redis:6379/7'],
        },
    },
}

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': env('DB_NAME', default='nope'),
        'USER': env('DB_USER', default='nope'),
        'PASSWORD': env('DB_PASSWORD', default='nope'),
        'HOST': env('DB_HOST', default='127.0.0.1'),
        'PORT': env('DB_PORT', default=3306)
    }
}

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://redis:6379",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {
                "max_connections": 1000,
                "encoding": 'utf-8'
            },
        }
    }
}

if 'pytest' in str(sys.argv):
    DATABASES['default'] = {
        'ENGINE': 'django.db.backends.sqlite3',
        'TEST_CHARSET': 'UTF8',
        'NAME': ':memory:',
        'TEST_NAME': ':memory:',
    }

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

MEDIA_ROOT = env('MEDIA_ROOT', default=str(BASE_DIR.joinpath('uploads')))

MEDIA_URL = '/assets/'

HOST_SCHEME = env('HOST_SCHEME', default='http')
HOST_DOMAIN = env('HOST_DOMAIN', default='127.0.0.1:8000')

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=300),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=30)
}

# Aliyun Settings
ALIYUN_SMS_ACCESS_KEY_ID = env('ALIYUN_SMS_ACCESS_KEY_ID')
ALIYUN_SMS_ACCESS_KEY_SECRET = env('ALIYUN_SMS_ACCESS_KEY_SECRET')

PROJECT_NAME = env('PROJECT_NAME')
SMS_VERIFY_TEMPLATE_CODE = env('SMS_VERIFY_TEMPLATE_CODE')
SMS_NOTIFY_TEMPLATE_CODE = env('SMS_NOTIFY_TEMPLATE_CODE')

# CELERY
BROKER_URL = env('BROKER_URL', default='redis://redis:6379/2')
CELERY_RESULT_BACKEND = env('CELERY_RESULT_BACKEND', default='redis://redis:6379/3')
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
# 时间格式化为中国时间
CELERY_TIMEZONE = 'Asia/Shanghai'
# 是否使用UTC时间
CELERY_ENABLE_UTC = False
# 设置任务过期时间 默认是一天，为None或0 表示永不过期
CELERY_TASK_RESULT_EXPIRES = 60 * 60 * 24
# 设置每个worker最大任务数
CELERYD_MAX_TASKS_PER_CHILD = 100

CELERY_IMPORTS = (
    'nope.tasks',
)

CELERYBEAT_SCHEDULE = {
    # 'add-every-night': {
    #     'task': 'nope.tasks.get_nope_daily_balance',
    #     'schedule': crontab(minute=55, hour=23)
    # },
    # 'update-every-60-seconds': {
    #     'task': 'nope.tasks.get_transaction',
    #     'schedule': 60
    # },
}
